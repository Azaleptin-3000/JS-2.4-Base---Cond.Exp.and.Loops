// Задание 1. Использование условных конструкций if-else

let age = 16; // Для проверки вывод будет: "Вы слишком молоды."

if (age < 18) {
    console.log("Вы слишком молоды.");
} else if (age >= 18 && age <= 65) {
    console.log("Добро пожаловать!");
} else {
    console.log("Вам пора на пенсию.");
}


// Задание 2. Реализация условий с помощью конструкции switch

let day = 5; // Со значением "5" в консоль выводится "Пятница!"

switch (day) {
    case 1:
        console.log("Понедельник");
        break;
    case 2:
        console.log("Вторник");
        break;
    case 3:
        console.log("Среда");
        break;
    case 4:
        console.log("Четверг");
        break;
    case 5:
        console.log("Пятница");
        break;
    case 6:
        console.log("Суббота");
        break;
    case 7:
        console.log("Воскресенье");
        break;
    default:
        console.log("Некорректный день");
}


// Задание 3. Подсчет суммы всех четных чисел от 0 до n

let n = 10; // Задайте значение n
let sum = 0;

// Цикл для подсчета суммы четных чисел
for (let i = 0; i <= n; i += 2) {
    sum += i; // Добавляем четное число к сумме
}

console.log(Сумма всех четных чисел от 0 до ${n} равна ${sum});


// Задание 4. Подсчет количества совпадений подстроки

let str = "Hello, how are you? Hello again!"; // Исходная строка
let subStr = "Hello"; // Подстрока для поиска
let count = 0;

let pos = str.indexOf(subStr); // Ищем первое вхождение подстроки методом indexOf
while (pos !== -1) {
    count++; // Увеличиваем счетчик при нахождении
    pos = str.indexOf(subStr, pos + 1); // Ищем следующее вхождение, начиная с позиции следующего символа
}

console.log(`Количество вхождений подстроки "${subStr}" в строке: ${count}`);


// Задание 5. Применение циклов и условных конструкций совместно

for (let i = 1; i <= 100; i++) {
    if (i % 3 === 0 && i % 5 === 0) {
        console.log("FizzBuzz");
    } else if (i % 3 === 0) {
        console.log("Fizz");
    } else if (i % 5 === 0) {
        console.log("Buzz");
    } else {
        console.log(i);
    }
}
// цикл перебирает числа от 1 до 100, а условия проверяют кратность чисел:
// - если число кратно и 3, и 5, выводится "FizzBuzz";
// - если число кратно 3, выводится "Fizz";
// - если число кратно 5, выводится "Buzz";
// - если ни одно из условий не выполнено, выводится само число.


// Задание 6. Реализация условий с использованием if-else if и switch

let season = 'summer'; // Заменяем на разные значения

if (season === 'winter') {
    console.log("Холодно и снежно. Наступила зима!");
} else if (season === 'spring') {
    console.log("Распускаются цветы. Наступила весна!");
} else if (season === 'summer') {
    console.log("Жарко и солнечно. Лето в самом разгаре!");
} else if (season === 'autumn') {
    console.log("Падают листья. Приближается осень.");
} else {
    console.log("Неизвестное время года");
}

let season = 'summer'; // Заменяем на разные значения

switch (season) {
    case 'winter':
        console.log("Холодно и снежно. Наступила зима!");
        break;
    case 'spring':
        console.log("Распускаются цветы. Наступила весна!");
        break;
    case 'summer':
        console.log("Жарко и солнечно. Лето в самом разгаре!");
        break;
    case 'autumn':
        console.log("Падают листья. Приближается осень.");
        break;
    default:
        console.log("Неизвестное время года");
}

// Обе версии с представленными конструкциями ветвления работают одинаково, но у них разный подход 
// в использовании условий: с конструкцией if-else if позволяет последовательно проверять значения, 
// а конструкция с switch позволяет сразу выбрать нужный вариант в зависимости от значения переменной.


// Задание 7. Создание цикла с выходом по условию

let number = 0;

while (number <= 10) {
    number = parseFloat(prompt("Введите число больше 10:"));
}

console.log("Число больше 10 введено!");


// Задание 8. Применение цикла do-while

let number = 0;

do {
    number = parseFloat(prompt("Введите число больше 10:"));
} while (number <= 10);

console.log("Число больше 10 введено!");
// В отличие от цикла while, цикл do-while сначала выполняет 
// блок кода (то есть запрос ввода), а затем проверяет условие.